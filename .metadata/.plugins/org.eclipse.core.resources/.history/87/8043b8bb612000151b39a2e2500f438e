#include <iostream>
#include <fstream>
#include <string>
#include <algorithm>


namespace std{
	/**
	 * Prints out welcome message to the user
	 * @method PrintWelcomeMessage
	 */
	void PrintGradingWelcomeMessage(){
		cout << '/' << string(50, '*') << '/' << endl;
		cout << "/*******" << " Welcome to the Grading Schema Program " << "*******/" << endl;
	}

	vector<string> ParseLine(string line){
		vector<string> details;
		string delimiter = " ";
		size_t pos = 0;
		string token;

		unsigned int x = 0;
		while ((pos = line.find(delimiter)) != string::npos) {

			token = line.substr(0, pos);
			line.erase(0, pos + delimiter.length());
			details.push_back(token);
			x++;
		}
		line.erase(std::remove(line.begin(), line.end(), '\r'), line.end());
		details.push_back(line);
		return details;
	}

	void CalculateAverage (vector<string> student, int grades, float &average){
		float sum;

		for(int i = 0; i < grades; i++){
			sum += stoi(student[i+1]);
		}

		average = sum/grades;
	}

	char GetGradeValue(float grade){
		char value;
		switch(grade){
			case grade >= 90:
				value = 'A';
				break;
			case grade >= 80:
				value = 'B';
				break;
			case grade >= 70:
				value = 'C';
				break;
			case grade >= 60:
				value = 'D';
				break;
			default:
				value = 'F';
		}
		return value;
	}

	void PrintGrades(int grades, vector<string> studentGrades, float studentAverage, char grade, const int formatWidth){
		cout << setw(formatWidth) << studentGrades[0];

		for(int y = 0; y < grades; y++){
			cout << setw(formatWidth) << studentGrades[y+1];
		}

		cout << setw(formatWidth) << studentAverage << << setw(formatWidth) << grade endl;
	}

	vector<string> CalculateGrades(string target){
		string line;
		ifstream file;
		int details[2];
		const int formatWidth = 8;
		vector<string> studentGrades;
		file.open(target);
		// try and open target file
		unsigned int i = 0;
		while ( getline (file,line) )
		{
			if(i==0){
				vector<string> temp = ParseLine(line);
				details[0] = stoi(temp[0]);
				details[1] = stoi(temp[1]);
				cout << setw(formatWidth) << "Name";
				for(int y = 0; y < details[1]; y++){
					cout << setw(formatWidth) << "Test" + to_string(y);
				}
				cout << setw(formatWidth) << "AVG" << setw(formatWidth) << "Grade" << endl;
			}else{
				studentGrades = ParseLine(line);
				float studentAverage;
				CalculateAverage(studentGrades, details[1], studentAverage);
				char grade = GetGradeValue(studentAverage);
				PrintGrades(details[1], studentGrades, studentAverage, grade, formatWidth);
			}

			i++;
		}

		// close file when done
		file.close();
		return studentGrades;
	}
}
