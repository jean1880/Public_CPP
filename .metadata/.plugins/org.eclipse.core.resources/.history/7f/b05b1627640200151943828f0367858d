/**
 * This program gets a user for their quarterly water bills for the last four quarters,
 * and returns their average output, and whether they should be using less water
 * @author Jean-Luc Desroches
 * @date 2015/05/24
 */

#include <iostream>
#include <limits>
#include <algorithm>
#include <string>

using namespace std;
class WaterProgram{
private:
	float quarteylBill[4];
	void printWelcomeMessage(){
		cout << '\\' << string(49, '*') << '\\' << endl;
		cout << '\\' << string(5, '*') << " Welcome to the the Water bill program " << string(5,'*') << '\\' << endl;
		cout << '\\' << string(49, '*') << '\\' << endl;
	}

	bool main (){
		int i = 0;

		printWelcomeMessage();
		for(float value : quarteylBill){
			quarteylBill[i] = setBillValue(i);
			i++;
		}
		return checkMoreInputs();
	}

	/**
	 * Converts a string to lowercase
	 * @method toLower
	 */
	void toLower(string &data){
		std::transform(data.begin(), data.end(), data.begin(), ::tolower);
	}

	/**
	 * Checks to see if the user has more bills to enter
	 * @method checkMoreInputs
	 * @return {bool}
	 */
	bool checkMoreInputs(){
		string reply;
		cout << "Do you wish to enter another bill set?" << endl;
		cin >> reply;
		return checkResponse(reply);
	}

	/**
	 * Checks the response and returns boolean value from response
	 * @return {bool}
	 */
	bool checkResponse(string res){
		// changes string characters to lowercase
		toLower(res);

		// check response
		if(res == "y" || res == "yes"){
			return true;
		}else if(res == "n" || res == "no"){
			return false;
		}else{
			// invalid input givin call recursively until valid response given
			cout << "Invalid option";
			return checkMoreInputs();
		}
	}

	float setBillValue(int i){
		float bill;
		cout << "Please enter your bill for quarter " << i+1 << ':' << endl;

		if(!(cin >> bill)){
			cin.clear();
		    std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); //discard input
			cout << "Please enter a numeric value for your bill" << endl;
			bill = setBillValue(i);
		}
		 return bill;
	}


public:
	void begin(){
		while(!main()){};
	}
};


int main(){
	try{
		WaterProgram waterProgram;
		waterProgram.begin();
		// exit program
		return 0;
	}catch(exception &e){
		cout << e.what();
		return -1;
	}

}
