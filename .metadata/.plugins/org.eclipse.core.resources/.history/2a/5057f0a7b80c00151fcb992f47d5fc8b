/*
 * BubbleSort.cpp
 *
 *  Created on: Jun 6, 2015
 *      Author: jdesroches
 */

#include "BubbleSort.h"

namespace std {

BubbleSort::BubbleSort() {
	// TODO Auto-generated constructor stub

}

BubbleSort::~BubbleSort() {
	// TODO Auto-generated destructor stub
}

static void BubbleSort::Sort(int* &array){
	bool swap;
	int temp;
	int bottom = (sizeof(array)/sizeof(*array)) - 1; // bottom indicates the end part of the
	// array where the largest values have
	// settled in order
	do
	{
		swap = false;
		for (int count = 0; count < bottom; count++)
		{
			if (array[count] > array[count+1])
			{ // the next three lines do a swap
			temp = array[count];
			array[count] = array[count+1];
			array[count+1] = temp;
			swap = true; // indicates that a swap occurred
			}
		}
		bottom--; // bottom is decremented by 1 since each pass through
		// the array adds one more value that is set in order
	} while(swap != false);
	// loop repeats until a pass through the array with
	// no swaps occurs
}

} /* namespace std */
